import util
from util import if_else
from Compiler import library

program.bit_length = 32

def odd_even_merge_intersection(n, combo):
    """ Odd-even merge
    Need to assume the sets are of the same size (n) and n is a power of2
    
    Returns: secret Array with intersection value if the element matches,
            and a 0 where the elements do not match
            
    """
    intersection = Array(2*n, sint)

    cs = library.oemerge(n, combo)

    
    @for_range(2*n-1)
    def _(i):
        match = cs[i] == cs[i+1]
        intersection[i] = if_else(match, cs[i], intersection[i])
        

    return intersection
    

def set_intersection_inputs(n):
    combo = Array(2*n, sint)

    @for_range_opt(n)
    def _(i):
        combo[i] = sfix.get_input_from(0)
        combo[i+n] = sfix.get_input_from(1)
         

    intersection = odd_even_merge_intersection(n, combo)
    
    
    
    return intersection


n=8
intersection = set_intersection_inputs(n)


@for_range(2*n)
def _(i):
    print_str('%s, ', intersection[i].reveal())